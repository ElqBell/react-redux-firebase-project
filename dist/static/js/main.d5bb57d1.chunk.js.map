{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","config/firebaseConfig.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","React","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","signUp","required","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","authorId","add","Date","err","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","middleware","thunk","withExtraArgument","store","createStore","applyMiddleware","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5bb57d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li>\r\n                <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n                    {props.profile.initials}\r\n                </NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((error) => {\r\n            dispatch({ type: 'LOGIN_ERROR', error })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response) => {\r\n            return firestore.collection('users').doc(response.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n        }).catch((error) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error });\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"logo\">DMDplan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications ? notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text notification-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        }) : <li>No new notifications</li>}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-conent grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n                    <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list sections\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n        const { projects, notifications, auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        notifications: state.firestore.ordered.notifications,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    if(project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-conent\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n                        <div>{ moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends React.Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n   \r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input onChange={this.handleChange} type=\"email\" id=\"email\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.handleChange} type=\"password\" id=\"password\"/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Log in</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p>{authError}</p> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends React.Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n   \r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input onChange={this.handleChange} type=\"email\" id=\"email\" required/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.handleChange} type=\"password\" id=\"password\" required/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input onChange={this.handleChange} type=\"text\" id=\"firstName\" required/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input onChange={this.handleChange} type=\"text\" id=\"lastName\" required/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        { authError ? <p>{ authError }</p> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends React.Component {\r\n    state = {\r\n        title: \"\",\r\n        content: \"\"\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    };\r\n   \r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input onChange={this.handleChange} type=\"text\" id=\"title\" required/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea onChange={this.handleChange} id=\"content\" className=\"materialize-textarea\" required></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create New Project</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject : (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err})\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails';\r\nimport SignIn from './components/auth/SignIn';\r\nimport SignUp from './components/auth/SignUp';\r\nimport CreateProject from './components/projects/CreateProject';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar/>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route path=\"/project/:id\" component={ProjectDetails} />\r\n          <Route path=\"/signin\" component={SignIn} />\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <Route path=\"/create\" component={CreateProject} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDo2MgCeIJPkNSbEQM_fN1j65An9sMwWnE\",\r\n    authDomain: \"dmd-react-redux-firebase.firebaseapp.com\",\r\n    databaseURL: \"https://dmd-react-redux-firebase.firebaseio.com\",\r\n    projectId: \"dmd-react-redux-firebase\",\r\n    storageBucket: \"dmd-react-redux-firebase.appspot.com\",\r\n    messagingSenderId: \"346280590774\",\r\n    appId: \"1:346280590774:web:780162d3eb8a39ffb45517\",\r\n    measurementId: \"G-NBM5ZVWEX2\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","const initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log(\"login error\");\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"login success\");\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: []\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project );\r\n            return {\r\n                ...state\r\n            }\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err );\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    auth: authReducer,\r\n    project: projectReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","// main stuff\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// other imports\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, getFirestore,reduxFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, isLoaded, getFirebase } from 'react-redux-firebase';\n\n// created by me\nimport firebase from './config/firebaseConfig';\nimport rootReducer from './store/reducers/rootReducer';\n\nconst middleware = [ thunk.withExtraArgument({getFirebase, getFirestore}) ];\n\n// create store\nconst store = createStore (\n  rootReducer,\n  compose(\n    applyMiddleware(...middleware),\n    reduxFirestore(firebase) // <- needed if using firestore\n  )\n);\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n}\n\n/// react-redux-firebase props for ReactReduxFirebaseProvider HOC\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n}\n\n// checks user authentication status before loading content\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}